# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  app:
    build:
      context: .
      target: final
    ports:
      - "${APP_LOCAL_PORT}:${APP_CONTAINER_PORT}"
    environment:
      - APP_CONTAINER_PORT=${APP_CONTAINER_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", $POSTGRES_USER]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  pg-data:

